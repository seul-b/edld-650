data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = F))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = F)
sd_weighted_var <- sd(data$weighted_var, na.rm = F)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
frpl_stats <- calculate_weighted_stats(dat_complete, "FRPL_percent")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
asian_pi_stats <- calculate_weighted_stats(dat_complete, "enroll_ASIAN_pct")
black_stats <- calculate_weighted_stats(dat_complete, "enroll_BLACK_pct")
hispanic_stats <- calculate_weighted_stats(dat_complete, "enroll_HISP_pct")
white_stats <- calculate_weighted_stats(dat_complete, "enroll_WHITE_pct")
pbis_stats <- calculate_weighted_stats(dat_complete, "PBIS")
odr_class_stats <- calculate_weighted_stats(dat_complete, "ODR_class")
odr_other_stats <- calculate_weighted_stats(dat_complete, "ODR_other")
odr_subjective_stats <- calculate_weighted_stats(dat_complete, "ODR_subjective")
odr_objective_stats <- calculate_weighted_stats(dat_complete, "ODR_objective")
View(am_indian_stats)
View(asian_pi_stats)
View(black_stats)
View(dat)
View(frpl_stats)
View(hispanic_stats)
View(odr_class_stats)
calculate_weighted_stats <- function(data, variable) {
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = T))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = T)
sd_weighted_var <- sd(data$weighted_var, na.rm = T)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
frpl_stats <- calculate_weighted_stats(dat_complete, "FRPL_percent")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
asian_pi_stats <- calculate_weighted_stats(dat_complete, "enroll_ASIAN_pct")
black_stats <- calculate_weighted_stats(dat_complete, "enroll_BLACK_pct")
hispanic_stats <- calculate_weighted_stats(dat_complete, "enroll_HISP_pct")
white_stats <- calculate_weighted_stats(dat_complete, "enroll_WHITE_pct")
pbis_stats <- calculate_weighted_stats(dat_complete, "PBIS")
odr_class_stats <- calculate_weighted_stats(dat_complete, "ODR_class")
odr_other_stats <- calculate_weighted_stats(dat_complete, "ODR_other")
odr_subjective_stats <- calculate_weighted_stats(dat_complete, "ODR_subjective")
odr_objective_stats <- calculate_weighted_stats(dat_complete, "ODR_objective")
View(am_indian_stats)
View(asian_pi_stats)
View(am_indian_stats)
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM")
calculate_weighted_stats <- function(data, variable) {
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = T))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = T)
sd_weighted_var <- sd(data$weighted_var, na.rm = T)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
calculate_weighted_stats <- function(data, variable) {
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = T))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = T)
sd_weighted_var <- sd(data$weighted_var, na.rm = T)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
black_stats <- calculate_weighted_stats(dat_complete, "enroll_BLACK_pct")
hispanic_stats <- calculate_weighted_stats(dat_complete, "enroll_HISP_pct")
white_stats <- calculate_weighted_stats(dat_complete, "enroll_WHITE_pct")
pbis_stats <- calculate_weighted_stats(dat_complete, "PBIS")
odr_class_stats <- calculate_weighted_stats(dat_complete, "ODR_class")
odr_other_stats <- calculate_weighted_stats(dat_complete, "ODR_other")
odr_subjective_stats <- calculate_weighted_stats(dat_complete, "ODR_subjective")
odr_objective_stats <- calculate_weighted_stats(dat_complete, "ODR_objective")
View(am_indian_stats)
View(dat_complete)
model1 <- feols(ODR_class ~ eval | state_id + school_year, data = dat_complete)
install.packages("feols")
library(feols)
install.packages("feols")
install.packages("feols", force=TRUE)
library(foels)
install.packages("feols", force=TRUE)
?foels
install.packages("fixest")
# C1
library(fixest)
model1 <- feols(ODR_class ~ eval | state_id + school_year,vcov = ~ state_id^school_year,  data = dat_complete)
model2 <- feols(ODR_class ~ eval*run_time | state_id + school_year, vcov = ~ state_id^school_year, data = dat_complete)
summary(model1)
summary(model2)
model2 <- feols(ODR_class ~ eval*evalXyear | state_id + school_year, vcov = ~ state_id^school_year, data = dat_complete)
model2 <- feols(ODR_class ~ eval*run_time | state_id + school_year, vcov = ~ state_id^school_year, data = dat_complete)
model2 <- feols(ODR_class ~ eval*evalXyear | state_id + school_year, vcov = ~ state_id^school_year, data = dat_complete)
model2 <- feols(ODR_class ~ eval*run_time | state_id + school_year, vcov = ~ state_id^school_year, data = dat_complete)
model3 <- feols(ODR_class ~ eval + run_time + evalXyear | state_id + school_year, data = dat_complete)
summary(model3)
summary(model2)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
library(flextable)
library(fixest)
library(dplyr)
library(ggplot2)
library(patchwork)
library(tidyr)
library(modelsummary)
library(stargazer)
dat <- read.csv("https://daviddliebowitz.github.io/edld650/assignments/DARE_1/data/EDLD_650_DARE_1.csv")
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
library(flextable)
library(fixest)
library(dplyr)
library(ggplot2)
library(patchwork)
library(tidyr)
library(modelsummary)
library(stargazer)
dat <- read.csv("https://daviddliebowitz.github.io/edld650/assignments/DARE_1/data/EDLD_650_DARE_1.csv")
# convert enroll to percentage
dat <- dat %>%
mutate(across(enroll_OTHER:enroll_WHITE, ~.x/enroll*100))
# make flags for teacher_eval policy, class_remove policy, suspension policy
# make run time for time with respect to teacher_eval policy
# make interaction term for teacher_eval and run_time
# For states with no policy, the NAs to convert to 0
# For states with no teacher eval policy, run_time set to -1
dat <- dat |>
mutate(eval = ifelse(school_year >= eval_year, 1, 0),
class_remove = ifelse(school_year >= class_remove_year, 1, 0),
suspension = ifelse(school_year >= suspension_year, 1, 0),
run_time = school_year - eval_year,
run_time = ifelse(is.na(eval_year), -1, run_time),
across(eval:suspension, ~ifelse(is.na(.x),0, .x)),
evalXyear = eval * run_time,
FRPL_percent = FRPL_percent*100) #FRPL is in proportion
# commenting as we don't want to display the output
# summary(dat) # check missingness
dat_complete <- dat[!is.na(dat$ODR_class) & !is.na(dat$ODR_objective) &
!is.na(dat$ODR_other) & !is.na(dat$ODR_subjective), ]
viz_histogram <- function(outcome, plot_title){
viz <- ggplot(dat_complete, aes({{outcome}})) +
geom_histogram(bins = 20, fill = "cornflowerblue")+               scale_x_continuous(breaks = 0:10,
expand = c(0,0)) +
scale_y_continuous(expand = c(0,0))+
theme_classic(8)+
labs(y = "ODR per 500 students",
x= "",
title = plot_title)
return(viz)
}
viz_class <- viz_histogram(ODR_class, "Location: Class")
viz_objective <- viz_histogram(ODR_objective, "Type: Objective")
viz_other <- viz_histogram(ODR_other, "Location: Other")
viz_subjective <- viz_histogram(ODR_subjective, "Type: Subjective")
library(patchwork)
(viz_class + viz_other) / (viz_subjective + viz_objective) +
plot_annotation(
title = "Distribution of Office Disciplinary Referrals",
tag_levels = 'A',
tag_suffix = "."
)
# create weighted columns
dat_summ <- dat_complete %>%
group_by(school_year) %>%
mutate(enroll_year = sum(enroll),
across(c(PBIS, FRPL_percent:ODR_objective), ~.x*enroll),
across(c(PBIS, FRPL_percent:ODR_objective), ~sum(.x, na.rm = T)/enroll_year)) %>%
ungroup()
dat_summ <- dat_summ %>%
# ordering columns
select(FRPL_percent, enroll_AM, enroll_ASIAN, enroll_BLACK,
enroll_WHITE, PBIS, ODR_class:ODR_objective) %>%
# changing PBIS to percentage
mutate(PBIS = PBIS*100) %>%
summarize(across(everything(), ~paste0(round(mean(.x),2),"\n(", round(sd(.x),2), ")"))) %>%
pivot_longer(
cols = everything(),
names_to = "chr",
values_to = "desc"
)
state_year <- round(mean(dat_complete$enroll),2)
year <- dat_complete %>% group_by(school_year) %>% summarize(total_enroll = sum(enroll))
year <- round(mean(year$total_enroll),2)
enroll_mean <- data_frame(
chr = c("state-year", "year"),
desc = c(as.character(state_year), as.character(year))
)
dat_summ <- rbind(enroll_mean, dat_summ)
dat_summ$chr <- c("Mean state-year enrollment",
"Mean year enrollment",
"% low-income (FRPL)",
"% Am. Indian/Alask. Native",
"% Asian",
"% Black",
"% white",
"% state-year observations in which PBIS was successfully implements",
"Classroom ODR rate",
"Other location ODR rate",
"Subjective-Classroom ODR rate",
"Objectiv-Classroom ODR rate")
dat_summ %>%
flextable() %>%
set_header_labels(
values = list(
chr = "Variable",
desc = "Mean (sd)")
) %>%
add_header_lines("Table 1. Descriptive statistics of key variables") %>%
align(1, 1, align = "left", "header") %>%
add_footer_lines("Reported means and standard deviation are weighted by state and year.") %>%
width(width = 3)
dat_complete %>%
# remove states that didn't implement teacher evaluation and restrict time
filter(!is.na(eval_year), run_time %in% c(-6:3)) %>%
# find state-run_time weighted averages
group_by(run_time) %>%
mutate(
enroll_run_time = sum(enroll),
odr_class = ODR_class*enroll,
odr_class = sum(odr_class)/enroll_run_time,
odr_sub = ODR_subjective*enroll,
odr_sub = sum(odr_sub)/enroll_run_time
) %>%
summarize(
odr_class = mean(ODR_class, na.rm = T),
odr_sub = mean(ODR_subjective, na.rm = T)
) %>%
ggplot()+
geom_point(aes(x = run_time, y = odr_class, color = "class")) +
geom_line(aes(x = run_time, y = odr_class, color = "class")) +
geom_point(aes(x = run_time, y = odr_sub, color = "subjective")) +
geom_line(aes(x = run_time, y = odr_sub, color = "subjective")) +
ylim(0,3.5) +
scale_x_continuous(breaks = c(-6:3))+
geom_vline(xintercept = 0, linetype = "dashed", color = "gray")+
labs(x = "Time to Eval Policy",
y = "ODR per 500 students",
color = "ODR type",
title = "Rate of ODR for States with Teacher Evaluation",
caption = "Rates are weighted by state and time to policy.") +
theme_classic(8)
model1 <- feols(ODR_class ~ eval | state_id + school_year, data = dat_complete, weights = dat_complete$enroll)
model2 <- feols(ODR_class ~ eval*run_time | state_id + school_year, data = dat_complete, weights = dat_complete$enroll)
# not significantly different from 0
# Keep models 2+3
# commented out vcov = ~ state_id^school_year as it was said "cells report estimates and associated standard errors clustered at the state level in parentheses." pg 21
stargazer(model1, model2, type = "text",
title = "Comparison of Regression Models",
align = TRUE,
out = "models_comparison_table.txt")
mod_c21_class <- feols(ODR_class ~ eval + class_remove + suspension
| state_id + school_year,
vcov = ~state_id,
data = dat_complete,
weights = dat_complete$enroll)
#summary(mod_c21_class)
# robustness check - two-way standard error
mod_c22_class <- feols(ODR_class ~ eval
| state_id + school_year,
vcov = ~state_id + school_year,
data = dat_complete,
weights = dat_complete$enroll)
#summary(mod_c22_class)
modelsummary(list("Simultaneous policy" = mod_c21_class,
"Two-way clustered SE" = mod_c22_class),
estimate = "{estimate} [{conf.low},{conf.high}]",
statistic = NULL,
coef_rename = c("eval" = "Teacher Evaluation",
"class_remove" = "Class removal policy",
"suspension" = "Suspension policy"),
gof_omit = "AIC|BIC|Log|R.*",
title = "Table 3. Robustness Checks",
notes = "Model estimates and 95% Confidence Intervals are presented.")
mod_c4 <- feols(ODR_class ~ i(run_time, ref = -1) |
state_id + school_year,
vcov = ~state_id,
data = dat_complete %>% filter(run_time %in% c(-6:3)))
modelsummary(list("Event-study estimate" = mod_c4),
gof_omit = "AIC|BIC|Log|R.*",
title = "Table 4. Event-study estimate",
notes = "Standard errors are clustered by state.")
iplot(mod_c4)
mod_c5 <- feols(ODR_class ~ eval*PBIS |
state_id + school_year,
vcov = ~state_id,
data = dat_complete)
modelsummary(list("Moderation by PBIS implementation" = mod_c5),
estimate = "{estimate} [{conf.low},{conf.high}]",
statistic = NULL,
coef_rename = c("eval" = "Teacher Evaluation",
"PBIS" = "PBIS implementation fidelity",
"eval*PBIS" = "Teacher Evaluation*PBIS"),
gof_omit = "AIC|BIC|Log|R.*",
title = "Table 5. Moderating Effect of PBIS implementation fidelity on ODRs",
notes = "Model estimates and 95% Confidence Intervals are presented.")
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
library(flextable)
library(fixest)
library(dplyr)
library(ggplot2)
library(patchwork)
library(tidyr)
library(modelsummary)
library(stargazer)
dat <- read.csv("https://daviddliebowitz.github.io/edld650/assignments/DARE_1/data/EDLD_650_DARE_1.csv")
# convert enroll to percentage
dat <- dat %>%
mutate(across(enroll_OTHER:enroll_WHITE, ~.x/enroll*100))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
library(flextable)
library(fixest)
library(dplyr)
library(ggplot2)
library(patchwork)
library(tidyr)
library(modelsummary)
library(stargazer)
dat <- read.csv("https://daviddliebowitz.github.io/edld650/assignments/DARE_1/data/EDLD_650_DARE_1.csv")
# convert enroll to percentage
dat <- dat %>%
mutate(across(enroll_OTHER:enroll_WHITE, ~.x/enroll*100))
# make flags for teacher_eval policy, class_remove policy, suspension policy
# make run time for time with respect to teacher_eval policy
# make interaction term for teacher_eval and run_time
# For states with no policy, the NAs to convert to 0
# For states with no teacher eval policy, run_time set to -1
dat <- dat |>
mutate(eval = ifelse(school_year >= eval_year, 1, 0),
class_remove = ifelse(school_year >= class_remove_year, 1, 0),
suspension = ifelse(school_year >= suspension_year, 1, 0),
run_time = school_year - eval_year,
run_time = ifelse(is.na(eval_year), -1, run_time),
across(eval:suspension, ~ifelse(is.na(.x),0, .x)),
evalXyear = eval * run_time,
FRPL_percent = FRPL_percent*100) #FRPL is in proportion
# commenting as we don't want to display the output
# summary(dat) # check missingness
dat_complete <- dat[!is.na(dat$ODR_class) & !is.na(dat$ODR_objective) &
!is.na(dat$ODR_other) & !is.na(dat$ODR_subjective), ]
viz_histogram <- function(outcome, plot_title){
viz <- ggplot(dat_complete, aes({{outcome}})) +
geom_histogram(bins = 20, fill = "cornflowerblue")+               scale_x_continuous(breaks = 0:10,
expand = c(0,0)) +
scale_y_continuous(expand = c(0,0))+
theme_classic(8)+
labs(y = "ODR per 500 students",
x= "",
title = plot_title)
return(viz)
}
viz_class <- viz_histogram(ODR_class, "Location: Class")
viz_objective <- viz_histogram(ODR_objective, "Type: Objective")
viz_other <- viz_histogram(ODR_other, "Location: Other")
viz_subjective <- viz_histogram(ODR_subjective, "Type: Subjective")
(viz_class + viz_other) / (viz_subjective + viz_objective) +
plot_annotation(
title = "Fig 1. Distribution of Office Disciplinary Referrals",
tag_levels = 'A',
tag_suffix = "."
)
# create weighted columns
dat_summ <- dat_complete %>%
group_by(school_year) %>%
mutate(enroll_year = sum(enroll),
across(c(FRPL_percent:ODR_objective), ~.x*enroll),
across(c(FRPL_percent:ODR_objective), ~sum(.x, na.rm = T)/enroll_year)) %>%
ungroup()
dat_summ <- dat_summ %>%
# ordering columns
select(FRPL_percent, enroll_AM, enroll_ASIAN, enroll_BLACK,
enroll_HISP, enroll_WHITE, PBIS, ODR_class:ODR_objective) %>%
# changing PBIS to percentage
mutate(PBIS = PBIS*100) %>%
summarize(across(everything(), ~paste0(round(mean(.x, na.rm = T),2),"\n(", round(sd(.x, na.rm = T),2), ")"))) %>%
pivot_longer(
cols = everything(),
names_to = "chr",
values_to = "desc"
)
state_year <- round(mean(dat_complete$enroll),2)
year <- dat_complete %>% group_by(school_year) %>% summarize(total_enroll = sum(enroll))
year <- round(mean(year$total_enroll),2)
enroll_mean <- data_frame(
chr = c("state-year", "year"),
desc = c(as.character(state_year), as.character(year))
)
dat_summ <- rbind(enroll_mean, dat_summ)
dat_summ$chr <- c("Mean state-year enrollment",
"Mean year enrollment",
"% low-income (FRPL)",
"% Am. Indian/Alask. Native",
"% Asian",
"% Black",
"% Hispanic",
"% White",
"% state-year observations in which PBIS was successfully implements",
"Classroom ODR rate",
"Other location ODR rate",
"Subjective-Classroom ODR rate",
"Objectiv-Classroom ODR rate")
dat_summ %>%
flextable() %>%
set_header_labels(
values = list(
chr = "Variable",
desc = "Mean (sd)")
) %>%
add_header_lines("Table 1. Descriptive statistics of key variables") %>%
align(1, 1, align = "left", "header") %>%
add_footer_lines("Reported means and standard deviation are weighted by state and year.") %>%
width(width = 2)
dat_complete %>%
# remove states that didn't implement teacher evaluation and restrict time
filter(!is.na(eval_year), run_time %in% c(-6:3)) %>%
# find state-run_time weighted averages
group_by(run_time) %>%
mutate(
enroll_run_time = sum(enroll),
odr_class = ODR_class*enroll,
odr_class = sum(odr_class)/enroll_run_time,
odr_sub = ODR_subjective*enroll,
odr_sub = sum(odr_sub)/enroll_run_time
) %>%
summarize(
odr_class = mean(ODR_class, na.rm = T),
odr_sub = mean(ODR_subjective, na.rm = T)
) %>%
ggplot()+
geom_point(aes(x = run_time, y = odr_class, color = "class")) +
geom_line(aes(x = run_time, y = odr_class, color = "class")) +
geom_point(aes(x = run_time, y = odr_sub, color = "subjective")) +
geom_line(aes(x = run_time, y = odr_sub, color = "subjective")) +
ylim(0,3.5) +
scale_x_continuous(breaks = c(-6:3))+
geom_vline(xintercept = 0, linetype = "dashed", color = "gray")+
labs(x = "Time to Eval Policy",
y = "ODR per 500 students",
color = "ODR type",
title = "Fig 2. Rate of ODR for States with Teacher Evaluation",
caption = "Rates are weighted by state and time to policy. \n0 refer the year in which a state implemented the teacher evaluation policy.") +
theme_classic(12)
model1 <- feols(ODR_class ~ eval | state_id + school_year, data = dat_complete, weights = dat_complete$enroll)
model2 <- feols(ODR_class ~ eval*run_time | state_id + school_year, data = dat_complete, weights = dat_complete$enroll)
# not significantly different from 0
# Keep models 2+3
# commented out vcov = ~ state_id^school_year as it was said "cells report estimates and associated standard errors clustered at the state level in parentheses." pg 21
modelsummary(list("Constant effect" = model1, "Linear effect" = model2),
title = "Table 2: Comparison of Regression Models",
coef_rename = c("eval" = "Teacher Evaluation",
"run_time" = "Time to policy"),
gof_omit = "AIC|BIC|Log|RMSE|R2 .*",
note = "Models are estimated with two-way fixed effect for state and year. No other covariates were used. Std. errors are clustered at state-level.",
)
dat_event <- dat_complete %>% filter(run_time %in% c(-6:3))
mod_c4 <- feols(ODR_class ~ i(run_time, ref = -1) |
state_id + school_year,
vcov = ~state_id,
weights = dat_event$enroll,
data = dat_event)
# modelsummary(list("Event-study" = mod_c4),
#              gof_omit = "AIC|BIC|Log|R.*",
#              title = "Table 4. Event-study estimate",
#              notes = "Standard errors are clustered by state.")
iplot(mod_c4,
main = "Fig 3. Effect on ODR in class",
xlab = "Time to policy")
mod_c5 <- feols(ODR_class ~ eval*PBIS |
state_id + school_year,
vcov = ~state_id,
weights = dat_complete$enroll,
data = dat_complete)
modelsummary(list("Moderation by PBIS implementation" = mod_c5),
estimate = "{estimate} [{conf.low},{conf.high}]",
statistic = NULL,
coef_rename = c("eval" = "Teacher Evaluation",
"PBIS" = "PBIS implementation fidelity",
"eval*PBIS" = "Teacher Evaluation*PBIS"),
gof_omit = "AIC|BIC|Log|RMSE|R2 .*",
title = "Table 4. Moderating Effect of PBIS implementation fidelity on ODRs",
notes = "Model estimates and 95% Confidence Intervals are presented.")
