shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(haven)
library(dplyr)
library(Hmisc)
library(readr)
library(ggplot2)
dat <- read_csv("EDLD_650_DARE_1.csv")
# A1
enroll_conv <- grep("^enroll_", names(dat), value = TRUE)
for (col in enroll_conv) {
dat[[paste0(col, "_pct")]] <- (dat[[col]] / dat$enroll) * 100
}
# A2
dat <- dat |>
mutate(eval = ifelse(school_year >= eval_year, 1, 0),
class_remove = ifelse(school_year >= class_remove_year, 1, 0),
suspension = ifelse(school_year >= suspension_year, 1, 0),
run_time = school_year - eval_year,
run_time = ifelse(is.na(eval_year), -1, run_time),
across(eval:suspension, ~ifelse(is.na(.x),0, .x)),
evalXyear = eval * run_time)
# B1
summary(dat)
# PBIS concerning, nothing else
dat_complete <- dat[!is.na(dat$ODR_class) & !is.na(dat$ODR_objective) &
!is.na(dat$ODR_other) & !is.na(dat$ODR_subjective), ]
# B2
viz_class <- ggplot(dat_complete, aes(ODR_class)) + geom_histogram(binwidth=1)
viz_class
viz_objective <- ggplot(dat_complete, aes(ODR_objective)) + geom_histogram(binwidth=1)
viz_objective
viz_other <- ggplot(dat_complete, aes(ODR_other)) + geom_histogram(binwidth=1)
viz_other
viz_cobjective <- ggplot(dat_complete, aes(ODR_objective)) + geom_histogram(binwidth=1)
viz_cobjective
# uni-modal, skewed
# come back for transformations or sensitivity tests later
# logarithmic transformation or square root transformation for positively skewed data
# or box-cox transformation?
# B3
library(dplyr)
calculate_weighted_stats <- function(data, variable) {
# Check if the variable exists in the data
if (!(variable %in% names(data))) {
stop("Variable not found in the data")
}
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = TRUE))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = TRUE)
sd_weighted_var <- sd(data$weighted_var, na.rm = TRUE)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
enrollment_stats <- calculate_weighted_stats(dat_complete, "enroll")
frpl_stats <- calculate_weighted_stats(dat_complete, "FRPL_percent")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
asian_pi_stats <- calculate_weighted_stats(dat_complete, "enroll_ASIAN_pct")
black_stats <- calculate_weighted_stats(dat_complete, "enroll_BLACK_pct")
hispanic_stats <- calculate_weighted_stats(dat_complete, "enroll_HISP_pct")
white_stats <- calculate_weighted_stats(dat_complete, "enroll_WHITE_pct")
pbis_stats <- calculate_weighted_stats(dat_complete, "PBIS")
odr_class_stats <- calculate_weighted_stats(dat_complete, "ODR_class")
odr_other_stats <- calculate_weighted_stats(dat_complete, "ODR_other")
odr_subjective_stats <- calculate_weighted_stats(dat_complete, "ODR_subjective")
odr_objective_stats <- calculate_weighted_stats(dat_complete, "ODR_objective")
View(dat_complete)
colnames(dat)
dat <- dat %>%
mutate(as.factor(school_year))
dat <- dat %>%
mutate(as.factor(school_year)) %>%
mutate(as.factor(state_id)) %>%
mutate(as.factor(state_abbrev)) %>%
mutate(as.factor(eval_year)) %>%
mutate(as.factor(class_remove_year)) %>%
mutate(as.factor(PBIS)) %>%
# PBIS concerning, nothing else
dat_complete <- dat[!is.na(dat$ODR_class) & !is.na(dat$ODR_objective) &
!is.na(dat$ODR_other) & !is.na(dat$ODR_subjective), ]
dat <- dat %>%
mutate(as.factor(school_year)) %>%
mutate(as.factor(state_id)) %>%
mutate(as.factor(state_abbrev)) %>%
mutate(as.factor(eval_year)) %>%
mutate(as.factor(class_remove_year)) %>%
mutate(as.factor(PBIS))
dat_complete <- dat[!is.na(dat$ODR_class) & !is.na(dat$ODR_objective) &
!is.na(dat$ODR_other) & !is.na(dat$ODR_subjective), ]
# B2
viz_class <- ggplot(dat_complete, aes(ODR_class)) + geom_histogram(binwidth=1)
viz_class
viz_objective <- ggplot(dat_complete, aes(ODR_objective)) + geom_histogram(binwidth=1)
viz_objective
viz_other <- ggplot(dat_complete, aes(ODR_other)) + geom_histogram(binwidth=1)
viz_other
viz_cobjective <- ggplot(dat_complete, aes(ODR_objective)) + geom_histogram(binwidth=1)
viz_cobjective
dat %>%
mutate(as.factor(school_year)) %>%
mutate(as.factor(state_id)) %>%
mutate(as.factor(state_abbrev)) %>%
mutate(as.factor(eval_year)) %>%
mutate(as.factor(class_remove_year)) %>%
mutate(as.factor(PBIS))
# B1
summary(dat)
dat <- read_csv("EDLD_650_DARE_1.csv")
# A1
enroll_conv <- grep("^enroll_", names(dat), value = TRUE)
for (col in enroll_conv) {
dat[[paste0(col, "_pct")]] <- (dat[[col]] / dat$enroll) * 100
}
# A2
dat <- dat |>
mutate(eval = ifelse(school_year >= eval_year, 1, 0),
class_remove = ifelse(school_year >= class_remove_year, 1, 0),
suspension = ifelse(school_year >= suspension_year, 1, 0),
run_time = school_year - eval_year,
run_time = ifelse(is.na(eval_year), -1, run_time),
across(eval:suspension, ~ifelse(is.na(.x),0, .x)),
evalXyear = eval * run_time)
dat[c(1:7)] <- lapply(dat[c(1:7)], factor)
dat_complete <- dat[!is.na(dat$ODR_class) & !is.na(dat$ODR_objective) &
!is.na(dat$ODR_other) & !is.na(dat$ODR_subjective), ]
# B2
viz_class <- ggplot(dat_complete, aes(ODR_class)) + geom_histogram(binwidth=1)
viz_class
viz_objective <- ggplot(dat_complete, aes(ODR_objective)) + geom_histogram(binwidth=1)
viz_objective
viz_other <- ggplot(dat_complete, aes(ODR_other)) + geom_histogram(binwidth=1)
viz_other
viz_cobjective <- ggplot(dat_complete, aes(ODR_objective)) + geom_histogram(binwidth=1)
viz_cobjective
# B3
library(dplyr)
calculate_weighted_stats <- function(data, variable) {
# Check if the variable exists in the data
if (!(variable %in% names(data))) {
stop("Variable not found in the data")
}
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = TRUE))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = TRUE)
sd_weighted_var <- sd(data$weighted_var, na.rm = TRUE)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
enrollment_stats <- calculate_weighted_stats(dat_complete, "enroll")
frpl_stats <- calculate_weighted_stats(dat_complete, "FRPL_percent")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
asian_pi_stats <- calculate_weighted_stats(dat_complete, "enroll_ASIAN_pct")
black_stats <- calculate_weighted_stats(dat_complete, "enroll_BLACK_pct")
hispanic_stats <- calculate_weighted_stats(dat_complete, "enroll_HISP_pct")
white_stats <- calculate_weighted_stats(dat_complete, "enroll_WHITE_pct")
pbis_stats <- calculate_weighted_stats(dat_complete, "PBIS")
odr_class_stats <- calculate_weighted_stats(dat_complete, "ODR_class")
odr_other_stats <- calculate_weighted_stats(dat_complete, "ODR_other")
odr_subjective_stats <- calculate_weighted_stats(dat_complete, "ODR_subjective")
odr_objective_stats <- calculate_weighted_stats(dat_complete, "ODR_objective")
View(odr_class_stats)
summary(dat)
dat_complete <- dat[!is.na(dat$ODR_class) & !is.na(dat$ODR_objective) &
!is.na(dat$ODR_other) & !is.na(dat$ODR_subjective), ]
View(dat_complete)
View(dat_complete)
calculate_weighted_stats <- function(data, variable) {
# Check if the variable exists in the data
# if (!(variable %in% names(data))) {
#   stop("Variable not found in the data")
# }
#
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = TRUE))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = TRUE)
sd_weighted_var <- sd(data$weighted_var, na.rm = TRUE)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
enrollment_stats <- calculate_weighted_stats(dat_complete, "enroll")
View(enrollment_stats)
View(enrollment_stats)
View(frpl_stats)
View(enrollment_stats)
View(frpl_stats)
View(hispanic_stats)
enrollment_stats <- calculate_weighted_stats(dat_complete, "enroll")
View(enrollment_stats)
dat <- read_csv("EDLD_650_DARE_1.csv")
# A1
enroll_conv <- grep("^enroll_", names(dat), value = TRUE)
for (col in enroll_conv) {
dat[[paste0(col, "_pct")]] <- (dat[[col]] / dat$enroll) * 100
}
# A2
dat <- dat |>
mutate(eval = ifelse(school_year >= eval_year, 1, 0),
class_remove = ifelse(school_year >= class_remove_year, 1, 0),
suspension = ifelse(school_year >= suspension_year, 1, 0),
run_time = school_year - eval_year,
run_time = ifelse(is.na(eval_year), -1, run_time),
across(eval:suspension, ~ifelse(is.na(.x),0, .x)),
evalXyear = eval * run_time)
# B1
summary(dat) # check missingness
# PBIS concerning, nothing else
# not too much worried as we don't use the variable
dat_complete <- dat[!is.na(dat$ODR_class) & !is.na(dat$ODR_objective) &
!is.na(dat$ODR_other) & !is.na(dat$ODR_subjective), ]
# B2
viz_class <- ggplot(dat_complete, aes(ODR_class)) + geom_histogram(binwidth=1)
viz_class
viz_objective <- ggplot(dat_complete, aes(ODR_objective)) + geom_histogram(binwidth=1)
viz_objective
viz_other <- ggplot(dat_complete, aes(ODR_other)) + geom_histogram(binwidth=1)
viz_other
viz_cobjective <- ggplot(dat_complete, aes(ODR_objective)) + geom_histogram(binwidth=1)
viz_cobjective
# uni-modal, skewed
# log transformation or box-cox transformation <- just mention it
# B3
library(dplyr)
# sample -- refer to the paper
calculate_weighted_stats <- function(data, variable) {
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = TRUE))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = TRUE)
sd_weighted_var <- sd(data$weighted_var, na.rm = TRUE)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
enrollment_stats <- calculate_weighted_stats(dat_complete, "enroll")
frpl_stats <- calculate_weighted_stats(dat_complete, "FRPL_percent")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
asian_pi_stats <- calculate_weighted_stats(dat_complete, "enroll_ASIAN_pct")
black_stats <- calculate_weighted_stats(dat_complete, "enroll_BLACK_pct")
hispanic_stats <- calculate_weighted_stats(dat_complete, "enroll_HISP_pct")
white_stats <- calculate_weighted_stats(dat_complete, "enroll_WHITE_pct")
pbis_stats <- calculate_weighted_stats(dat_complete, "PBIS")
odr_class_stats <- calculate_weighted_stats(dat_complete, "ODR_class")
odr_other_stats <- calculate_weighted_stats(dat_complete, "ODR_other")
odr_subjective_stats <- calculate_weighted_stats(dat_complete, "ODR_subjective")
odr_objective_stats <- calculate_weighted_stats(dat_complete, "ODR_objective")
enrollment_stats
model1 <- lm(ODR_class ~ eval + enroll + FRPL_percent + PBIS, data = dat_complete)
model2 <- lm(ODR_class ~ eval + school_year + evalXyear + enroll + FRPL_percent + PBIS, data = dat_complete)
View(model1)
View(model2)
View(model1)
View(model2)
calculate_weighted_stats <- function(data, variable) {
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = TRUE))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = TRUE)
sd_weighted_var <- sd(data$weighted_var, na.rm = TRUE)
#
#   # Return a list with the results
#   return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
frpl_stats <- calculate_weighted_stats(dat_complete, "FRPL_percent")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
asian_pi_stats <- calculate_weighted_stats(dat_complete, "enroll_ASIAN_pct")
calculate_weighted_stats <- function(data, variable) {
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = TRUE))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = TRUE)
sd_weighted_var <- sd(data$weighted_var, na.rm = TRUE)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
frpl_stats <- calculate_weighted_stats(dat_complete, "FRPL_percent")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
asian_pi_stats <- calculate_weighted_stats(dat_complete, "enroll_ASIAN_pct")
black_stats <- calculate_weighted_stats(dat_complete, "enroll_BLACK_pct")
hispanic_stats <- calculate_weighted_stats(dat_complete, "enroll_HISP_pct")
white_stats <- calculate_weighted_stats(dat_complete, "enroll_WHITE_pct")
pbis_stats <- calculate_weighted_stats(dat_complete, "PBIS")
odr_class_stats <- calculate_weighted_stats(dat_complete, "ODR_class")
odr_other_stats <- calculate_weighted_stats(dat_complete, "ODR_other")
odr_subjective_stats <- calculate_weighted_stats(dat_complete, "ODR_subjective")
odr_objective_stats <- calculate_weighted_stats(dat_complete, "ODR_objective")
knitr::opts_chunk$set(echo = TRUE)
library(haven)
library(dplyr)
library(Hmisc)
library(readr)
library(ggplot2)
dat <- read_csv("EDLD_650_DARE_1.csv")
# A1
enroll_conv <- grep("^enroll_", names(dat), value = TRUE)
for (col in enroll_conv) {
dat[[paste0(col, "_pct")]] <- (dat[[col]] / dat$enroll) * 100
}
# A2
dat <- dat |>
mutate(eval = ifelse(school_year >= eval_year, 1, 0),
class_remove = ifelse(school_year >= class_remove_year, 1, 0),
suspension = ifelse(school_year >= suspension_year, 1, 0),
run_time = school_year - eval_year,
run_time = ifelse(is.na(eval_year), -1, run_time),
across(eval:suspension, ~ifelse(is.na(.x),0, .x)),
evalXyear = eval * run_time)
# B1
summary(dat) # check missingness
# PBIS concerning, nothing else
# not too much worried as we don't use the variable
dat_complete <- dat[!is.na(dat$ODR_class) & !is.na(dat$ODR_objective) &
!is.na(dat$ODR_other) & !is.na(dat$ODR_subjective), ]
# B2
viz_class <- ggplot(dat_complete, aes(ODR_class)) + geom_histogram(binwidth=1)
viz_class
viz_objective <- ggplot(dat_complete, aes(ODR_objective)) + geom_histogram(binwidth=1)
viz_objective
viz_other <- ggplot(dat_complete, aes(ODR_other)) + geom_histogram(binwidth=1)
viz_other
viz_cobjective <- ggplot(dat_complete, aes(ODR_objective)) + geom_histogram(binwidth=1)
viz_cobjective
# uni-modal, skewed
# log transformation or box-cox transformation <- just mention it
# B3
library(dplyr)
# sample -- refer to the paper
calculate_weighted_stats <- function(data, variable) {
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = TRUE))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = TRUE)
sd_weighted_var <- sd(data$weighted_var, na.rm = TRUE)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
# no need mean state-year enrollment/ mean year enrollment
frpl_stats <- calculate_weighted_stats(dat_complete, "FRPL_percent")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
asian_pi_stats <- calculate_weighted_stats(dat_complete, "enroll_ASIAN_pct")
black_stats <- calculate_weighted_stats(dat_complete, "enroll_BLACK_pct")
hispanic_stats <- calculate_weighted_stats(dat_complete, "enroll_HISP_pct")
white_stats <- calculate_weighted_stats(dat_complete, "enroll_WHITE_pct")
pbis_stats <- calculate_weighted_stats(dat_complete, "PBIS")
odr_class_stats <- calculate_weighted_stats(dat_complete, "ODR_class")
odr_other_stats <- calculate_weighted_stats(dat_complete, "ODR_other")
odr_subjective_stats <- calculate_weighted_stats(dat_complete, "ODR_subjective")
odr_objective_stats <- calculate_weighted_stats(dat_complete, "ODR_objective")
View(am_indian_stats)
View(asian_pi_stats)
View(asian_pi_stats)
View(black_stats)
calculate_weighted_stats <- function(data, variable) {
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = F))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = F)
sd_weighted_var <- sd(data$weighted_var, na.rm = F)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
frpl_stats <- calculate_weighted_stats(dat_complete, "FRPL_percent")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
asian_pi_stats <- calculate_weighted_stats(dat_complete, "enroll_ASIAN_pct")
black_stats <- calculate_weighted_stats(dat_complete, "enroll_BLACK_pct")
hispanic_stats <- calculate_weighted_stats(dat_complete, "enroll_HISP_pct")
white_stats <- calculate_weighted_stats(dat_complete, "enroll_WHITE_pct")
pbis_stats <- calculate_weighted_stats(dat_complete, "PBIS")
odr_class_stats <- calculate_weighted_stats(dat_complete, "ODR_class")
odr_other_stats <- calculate_weighted_stats(dat_complete, "ODR_other")
odr_subjective_stats <- calculate_weighted_stats(dat_complete, "ODR_subjective")
odr_objective_stats <- calculate_weighted_stats(dat_complete, "ODR_objective")
View(am_indian_stats)
View(asian_pi_stats)
View(black_stats)
View(dat)
View(frpl_stats)
View(hispanic_stats)
View(odr_class_stats)
calculate_weighted_stats <- function(data, variable) {
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = T))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = T)
sd_weighted_var <- sd(data$weighted_var, na.rm = T)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
frpl_stats <- calculate_weighted_stats(dat_complete, "FRPL_percent")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
asian_pi_stats <- calculate_weighted_stats(dat_complete, "enroll_ASIAN_pct")
black_stats <- calculate_weighted_stats(dat_complete, "enroll_BLACK_pct")
hispanic_stats <- calculate_weighted_stats(dat_complete, "enroll_HISP_pct")
white_stats <- calculate_weighted_stats(dat_complete, "enroll_WHITE_pct")
pbis_stats <- calculate_weighted_stats(dat_complete, "PBIS")
odr_class_stats <- calculate_weighted_stats(dat_complete, "ODR_class")
odr_other_stats <- calculate_weighted_stats(dat_complete, "ODR_other")
odr_subjective_stats <- calculate_weighted_stats(dat_complete, "ODR_subjective")
odr_objective_stats <- calculate_weighted_stats(dat_complete, "ODR_objective")
View(am_indian_stats)
View(asian_pi_stats)
View(am_indian_stats)
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM")
calculate_weighted_stats <- function(data, variable) {
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = T))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = T)
sd_weighted_var <- sd(data$weighted_var, na.rm = T)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM")
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
calculate_weighted_stats <- function(data, variable) {
# Group by school_year and calculate total enrollment for each year
data <- data |>
group_by(school_year) |>
mutate(year_total_enrollment = sum(enroll, na.rm = T))  |>
ungroup()
# Calculate the weighted variable
data$weighted_var <- (data[[variable]] * data$enroll) / data$year_total_enrollment
# Calculate mean and standard deviation for the weighted variable
mean_weighted_var <- mean(data$weighted_var, na.rm = T)
sd_weighted_var <- sd(data$weighted_var, na.rm = T)
# Return a list with the results
return(list(mean = mean_weighted_var, sd = sd_weighted_var))
}
am_indian_stats <- calculate_weighted_stats(dat_complete, "enroll_AM_pct")
black_stats <- calculate_weighted_stats(dat_complete, "enroll_BLACK_pct")
hispanic_stats <- calculate_weighted_stats(dat_complete, "enroll_HISP_pct")
white_stats <- calculate_weighted_stats(dat_complete, "enroll_WHITE_pct")
pbis_stats <- calculate_weighted_stats(dat_complete, "PBIS")
odr_class_stats <- calculate_weighted_stats(dat_complete, "ODR_class")
odr_other_stats <- calculate_weighted_stats(dat_complete, "ODR_other")
odr_subjective_stats <- calculate_weighted_stats(dat_complete, "ODR_subjective")
odr_objective_stats <- calculate_weighted_stats(dat_complete, "ODR_objective")
View(am_indian_stats)
View(dat_complete)
model1 <- feols(ODR_class ~ eval | state_id + school_year, data = dat_complete)
install.packages("feols")
library(feols)
install.packages("feols")
install.packages("feols", force=TRUE)
library(foels)
install.packages("feols", force=TRUE)
?foels
install.packages("fixest")
# C1
library(fixest)
model1 <- feols(ODR_class ~ eval | state_id + school_year,vcov = ~ state_id^school_year,  data = dat_complete)
model2 <- feols(ODR_class ~ eval*run_time | state_id + school_year, vcov = ~ state_id^school_year, data = dat_complete)
summary(model1)
summary(model2)
model2 <- feols(ODR_class ~ eval*evalXyear | state_id + school_year, vcov = ~ state_id^school_year, data = dat_complete)
model2 <- feols(ODR_class ~ eval*run_time | state_id + school_year, vcov = ~ state_id^school_year, data = dat_complete)
model2 <- feols(ODR_class ~ eval*evalXyear | state_id + school_year, vcov = ~ state_id^school_year, data = dat_complete)
model2 <- feols(ODR_class ~ eval*run_time | state_id + school_year, vcov = ~ state_id^school_year, data = dat_complete)
model3 <- feols(ODR_class ~ eval + run_time + evalXyear | state_id + school_year, data = dat_complete)
summary(model3)
summary(model2)
